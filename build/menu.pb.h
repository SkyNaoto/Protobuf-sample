// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: menu.proto
// Protobuf C++ Version: 6.32.1

#ifndef menu_2eproto_2epb_2eh
#define menu_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_menu_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_menu_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_menu_2eproto;
}  // extern "C"
class MenuTree;
struct MenuTreeDefaultTypeInternal;
extern MenuTreeDefaultTypeInternal _MenuTree_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MenuTree_class_data_;
class item;
struct itemDefaultTypeInternal;
extern itemDefaultTypeInternal _item_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull item_class_data_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class item final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:item) */ {
 public:
  inline item() : item(nullptr) {}
  ~item() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(item* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(item));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR item(::google::protobuf::internal::ConstantInitialized);

  inline item(const item& from) : item(nullptr, from) {}
  inline item(item&& from) noexcept
      : item(nullptr, ::std::move(from)) {}
  inline item& operator=(const item& from) {
    CopyFrom(from);
    return *this;
  }
  inline item& operator=(item&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const item& default_instance() {
    return *reinterpret_cast<const item*>(
        &_item_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(item& a, item& b) { a.Swap(&b); }
  inline void Swap(item* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(item* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  item* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const item& from) { item::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(item* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "item"; }

 protected:
  explicit item(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  item(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const item& from);
  item(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, item&& from) noexcept
      : item(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageTextFieldNumber = 1,
    kMessageIdFieldNumber = 2,
    kDataIdFieldNumber = 4,
    kChiledIdFieldNumber = 3,
  };
  // string message_text = 1;
  void clear_message_text() ;
  const ::std::string& message_text() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message_text(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message_text();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message_text();
  void set_allocated_message_text(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message_text() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message_text(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message_text();

  public:
  // string message_id = 2;
  void clear_message_id() ;
  const ::std::string& message_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message_id();
  void set_allocated_message_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message_id();

  public:
  // string data_id = 4;
  void clear_data_id() ;
  const ::std::string& data_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_data_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_data_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_data_id();
  void set_allocated_data_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_data_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_data_id();

  public:
  // int32 chiled_id = 3;
  void clear_chiled_id() ;
  ::int32_t chiled_id() const;
  void set_chiled_id(::int32_t value);

  private:
  ::int32_t _internal_chiled_id() const;
  void _internal_set_chiled_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:item)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 42,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const item& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_text_;
    ::google::protobuf::internal::ArenaStringPtr message_id_;
    ::google::protobuf::internal::ArenaStringPtr data_id_;
    ::int32_t chiled_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_menu_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull item_class_data_;
// -------------------------------------------------------------------

class MenuTree final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MenuTree) */ {
 public:
  inline MenuTree() : MenuTree(nullptr) {}
  ~MenuTree() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MenuTree* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MenuTree));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MenuTree(::google::protobuf::internal::ConstantInitialized);

  inline MenuTree(const MenuTree& from) : MenuTree(nullptr, from) {}
  inline MenuTree(MenuTree&& from) noexcept
      : MenuTree(nullptr, ::std::move(from)) {}
  inline MenuTree& operator=(const MenuTree& from) {
    CopyFrom(from);
    return *this;
  }
  inline MenuTree& operator=(MenuTree&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MenuTree& default_instance() {
    return *reinterpret_cast<const MenuTree*>(
        &_MenuTree_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MenuTree& a, MenuTree& b) { a.Swap(&b); }
  inline void Swap(MenuTree* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MenuTree* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MenuTree* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MenuTree>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MenuTree& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MenuTree& from) { MenuTree::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MenuTree* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MenuTree"; }

 protected:
  explicit MenuTree(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MenuTree(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MenuTree& from);
  MenuTree(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MenuTree&& from) noexcept
      : MenuTree(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 4,
    kLanguageFieldNumber = 1,
    kParentIdFieldNumber = 2,
    kStatusFieldNumber = 3,
  };
  // repeated .item items = 4;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::item* PROTOBUF_NONNULL mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::item>* PROTOBUF_NONNULL mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::item>* PROTOBUF_NONNULL _internal_mutable_items();
  public:
  const ::item& items(int index) const;
  ::item* PROTOBUF_NONNULL add_items();
  const ::google::protobuf::RepeatedPtrField<::item>& items() const;
  // string language = 1;
  void clear_language() ;
  const ::std::string& language() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_language(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_language();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_language();
  void set_allocated_language(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_language() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_language(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_language();

  public:
  // int32 parent_id = 2;
  void clear_parent_id() ;
  ::int32_t parent_id() const;
  void set_parent_id(::int32_t value);

  private:
  ::int32_t _internal_parent_id() const;
  void _internal_set_parent_id(::int32_t value);

  public:
  // bool status = 3;
  void clear_status() ;
  bool status() const;
  void set_status(bool value);

  private:
  bool _internal_status() const;
  void _internal_set_status(bool value);

  public:
  // @@protoc_insertion_point(class_scope:MenuTree)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 25,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MenuTree& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::item > items_;
    ::google::protobuf::internal::ArenaStringPtr language_;
    ::int32_t parent_id_;
    bool status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_menu_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MenuTree_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// item

// string message_text = 1;
inline void item::clear_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_text_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& item::message_text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:item.message_text)
  return _internal_message_text();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void item::set_message_text(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.message_text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:item.message_text)
}
inline ::std::string* PROTOBUF_NONNULL item::mutable_message_text()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message_text();
  // @@protoc_insertion_point(field_mutable:item.message_text)
  return _s;
}
inline const ::std::string& item::_internal_message_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_text_.Get();
}
inline void item::_internal_set_message_text(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.message_text_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL item::_internal_mutable_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.message_text_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE item::release_message_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:item.message_text)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.message_text_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_text_.Set("", GetArena());
  }
  return released;
}
inline void item::set_allocated_message_text(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.message_text_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_text_.IsDefault()) {
    _impl_.message_text_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:item.message_text)
}

// string message_id = 2;
inline void item::clear_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& item::message_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:item.message_id)
  return _internal_message_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void item::set_message_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.message_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:item.message_id)
}
inline ::std::string* PROTOBUF_NONNULL item::mutable_message_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message_id();
  // @@protoc_insertion_point(field_mutable:item.message_id)
  return _s;
}
inline const ::std::string& item::_internal_message_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_id_.Get();
}
inline void item::_internal_set_message_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.message_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL item::_internal_mutable_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.message_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE item::release_message_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:item.message_id)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.message_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_id_.Set("", GetArena());
  }
  return released;
}
inline void item::set_allocated_message_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.message_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_id_.IsDefault()) {
    _impl_.message_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:item.message_id)
}

// int32 chiled_id = 3;
inline void item::clear_chiled_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chiled_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::int32_t item::chiled_id() const {
  // @@protoc_insertion_point(field_get:item.chiled_id)
  return _internal_chiled_id();
}
inline void item::set_chiled_id(::int32_t value) {
  _internal_set_chiled_id(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:item.chiled_id)
}
inline ::int32_t item::_internal_chiled_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chiled_id_;
}
inline void item::_internal_set_chiled_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chiled_id_ = value;
}

// string data_id = 4;
inline void item::clear_data_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& item::data_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:item.data_id)
  return _internal_data_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void item::set_data_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.data_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:item.data_id)
}
inline ::std::string* PROTOBUF_NONNULL item::mutable_data_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_data_id();
  // @@protoc_insertion_point(field_mutable:item.data_id)
  return _s;
}
inline const ::std::string& item::_internal_data_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_id_.Get();
}
inline void item::_internal_set_data_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.data_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL item::_internal_mutable_data_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.data_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE item::release_data_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:item.data_id)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.data_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_id_.Set("", GetArena());
  }
  return released;
}
inline void item::set_allocated_data_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.data_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_id_.IsDefault()) {
    _impl_.data_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:item.data_id)
}

// -------------------------------------------------------------------

// MenuTree

// string language = 1;
inline void MenuTree::clear_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.language_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& MenuTree::language() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MenuTree.language)
  return _internal_language();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MenuTree::set_language(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.language_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MenuTree.language)
}
inline ::std::string* PROTOBUF_NONNULL MenuTree::mutable_language()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_language();
  // @@protoc_insertion_point(field_mutable:MenuTree.language)
  return _s;
}
inline const ::std::string& MenuTree::_internal_language() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.language_.Get();
}
inline void MenuTree::_internal_set_language(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.language_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MenuTree::_internal_mutable_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.language_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MenuTree::release_language() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MenuTree.language)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.language_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.language_.Set("", GetArena());
  }
  return released;
}
inline void MenuTree::set_allocated_language(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.language_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.language_.IsDefault()) {
    _impl_.language_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:MenuTree.language)
}

// int32 parent_id = 2;
inline void MenuTree::clear_parent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t MenuTree::parent_id() const {
  // @@protoc_insertion_point(field_get:MenuTree.parent_id)
  return _internal_parent_id();
}
inline void MenuTree::set_parent_id(::int32_t value) {
  _internal_set_parent_id(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:MenuTree.parent_id)
}
inline ::int32_t MenuTree::_internal_parent_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parent_id_;
}
inline void MenuTree::_internal_set_parent_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parent_id_ = value;
}

// bool status = 3;
inline void MenuTree::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = false;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline bool MenuTree::status() const {
  // @@protoc_insertion_point(field_get:MenuTree.status)
  return _internal_status();
}
inline void MenuTree::set_status(bool value) {
  _internal_set_status(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:MenuTree.status)
}
inline bool MenuTree::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void MenuTree::_internal_set_status(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// repeated .item items = 4;
inline int MenuTree::_internal_items_size() const {
  return _internal_items().size();
}
inline int MenuTree::items_size() const {
  return _internal_items_size();
}
inline void MenuTree::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::item* PROTOBUF_NONNULL MenuTree::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MenuTree.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::item>* PROTOBUF_NONNULL MenuTree::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MenuTree.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::item& MenuTree::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MenuTree.items)
  return _internal_items().Get(index);
}
inline ::item* PROTOBUF_NONNULL MenuTree::add_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:MenuTree.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::item>& MenuTree::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MenuTree.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::item>&
MenuTree::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::item>* PROTOBUF_NONNULL
MenuTree::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // menu_2eproto_2epb_2eh

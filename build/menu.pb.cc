// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: menu.proto
// Protobuf C++ Version: 6.32.1

#include "menu.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr item::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        chiled_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR item::item(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(item_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct itemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR itemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~itemDefaultTypeInternal() {}
  union {
    item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 itemDefaultTypeInternal _item_default_instance_;

inline constexpr MenuTree::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        items_{},
        language_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_id_{0},
        status_{false} {}

template <typename>
PROTOBUF_CONSTEXPR MenuTree::MenuTree(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MenuTree_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MenuTreeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MenuTreeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MenuTreeDefaultTypeInternal() {}
  union {
    MenuTree _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MenuTreeDefaultTypeInternal _MenuTree_default_instance_;
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_menu_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_menu_2eproto = nullptr;
const ::uint32_t
    TableStruct_menu_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::item, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::item, _impl_.message_text_),
        PROTOBUF_FIELD_OFFSET(::item, _impl_.message_id_),
        PROTOBUF_FIELD_OFFSET(::item, _impl_.chiled_id_),
        PROTOBUF_FIELD_OFFSET(::item, _impl_.data_id_),
        0,
        1,
        3,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::MenuTree, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::MenuTree, _impl_.language_),
        PROTOBUF_FIELD_OFFSET(::MenuTree, _impl_.parent_id_),
        PROTOBUF_FIELD_OFFSET(::MenuTree, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::MenuTree, _impl_.items_),
        0,
        1,
        2,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::item)},
        {11, sizeof(::MenuTree)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_item_default_instance_._instance,
    &::_MenuTree_default_instance_._instance,
};
const char descriptor_table_protodef_menu_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nmenu.proto\"T\n\004item\022\024\n\014message_text\030\001 \001"
    "(\t\022\022\n\nmessage_id\030\002 \001(\t\022\021\n\tchiled_id\030\003 \001("
    "\005\022\017\n\007data_id\030\004 \001(\t\"U\n\010MenuTree\022\020\n\010langua"
    "ge\030\001 \001(\t\022\021\n\tparent_id\030\002 \001(\005\022\016\n\006status\030\003 "
    "\001(\010\022\024\n\005items\030\004 \003(\0132\005.itemb\006proto3"
};
static ::absl::once_flag descriptor_table_menu_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_menu_2eproto = {
    false,
    false,
    193,
    descriptor_table_protodef_menu_2eproto,
    "menu.proto",
    &descriptor_table_menu_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_menu_2eproto::offsets,
    file_level_enum_descriptors_menu_2eproto,
    file_level_service_descriptors_menu_2eproto,
};
// ===================================================================

class item::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<item>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(item, _impl_._has_bits_);
};

item::item(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, item_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:item)
}
PROTOBUF_NDEBUG_INLINE item::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::item& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_text_(arena, from.message_text_),
        message_id_(arena, from.message_id_),
        data_id_(arena, from.data_id_) {}

item::item(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const item& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, item_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  item* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.chiled_id_ = from._impl_.chiled_id_;

  // @@protoc_insertion_point(copy_constructor:item)
}
PROTOBUF_NDEBUG_INLINE item::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_text_(arena),
        message_id_(arena),
        data_id_(arena) {}

inline void item::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.chiled_id_ = {};
}
item::~item() {
  // @@protoc_insertion_point(destructor:item)
  SharedDtor(*this);
}
inline void item::SharedDtor(MessageLite& self) {
  item& this_ = static_cast<item&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_text_.Destroy();
  this_._impl_.message_id_.Destroy();
  this_._impl_.data_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL item::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) item(arena);
}
constexpr auto item::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(item),
                                            alignof(item));
}
constexpr auto item::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_item_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &item::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<item>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &item::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<item>(), &item::ByteSizeLong,
              &item::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(item, _impl_._cached_size_),
          false,
      },
      &item::kDescriptorMethods,
      &descriptor_table_menu_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull item_class_data_ =
        item::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
item::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&item_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(item_class_data_.tc_table);
  return item_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 42, 2>
item::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(item, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    item_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::item>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string data_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(item, _impl_.data_id_)}},
    // string message_text = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(item, _impl_.message_text_)}},
    // string message_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(item, _impl_.message_id_)}},
    // int32 chiled_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(item, _impl_.chiled_id_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(item, _impl_.chiled_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message_text = 1;
    {PROTOBUF_FIELD_OFFSET(item, _impl_.message_text_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message_id = 2;
    {PROTOBUF_FIELD_OFFSET(item, _impl_.message_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 chiled_id = 3;
    {PROTOBUF_FIELD_OFFSET(item, _impl_.chiled_id_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string data_id = 4;
    {PROTOBUF_FIELD_OFFSET(item, _impl_.data_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\4\14\12\0\7\0\0\0"
    "item"
    "message_text"
    "message_id"
    "data_id"
  }},
};
PROTOBUF_NOINLINE void item::Clear() {
// @@protoc_insertion_point(message_clear_start:item)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.message_text_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.message_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.data_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.chiled_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL item::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const item& this_ = static_cast<const item&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL item::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const item& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message_text = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_message_text().empty()) {
      const ::std::string& _s = this_._internal_message_text();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "item.message_text");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string message_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_message_id().empty()) {
      const ::std::string& _s = this_._internal_message_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "item.message_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 chiled_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (this_._internal_chiled_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_chiled_id(), target);
    }
  }

  // string data_id = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_data_id().empty()) {
      const ::std::string& _s = this_._internal_data_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "item.data_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:item)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t item::ByteSizeLong(const MessageLite& base) {
  const item& this_ = static_cast<const item&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t item::ByteSizeLong() const {
  const item& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string message_text = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_message_text().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message_text());
      }
    }
    // string message_id = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_message_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message_id());
      }
    }
    // string data_id = 4;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_data_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_data_id());
      }
    }
    // int32 chiled_id = 3;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (this_._internal_chiled_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_chiled_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void item::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<item*>(&to_msg);
  auto& from = static_cast<const item&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_message_text().empty()) {
        _this->_internal_set_message_text(from._internal_message_text());
      } else {
        if (_this->_impl_.message_text_.IsDefault()) {
          _this->_internal_set_message_text("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_message_id().empty()) {
        _this->_internal_set_message_id(from._internal_message_id());
      } else {
        if (_this->_impl_.message_id_.IsDefault()) {
          _this->_internal_set_message_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_data_id().empty()) {
        _this->_internal_set_data_id(from._internal_data_id());
      } else {
        if (_this->_impl_.data_id_.IsDefault()) {
          _this->_internal_set_data_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (from._internal_chiled_id() != 0) {
        _this->_impl_.chiled_id_ = from._impl_.chiled_id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void item::CopyFrom(const item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void item::InternalSwap(item* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_text_, &other->_impl_.message_text_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_id_, &other->_impl_.message_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_id_, &other->_impl_.data_id_, arena);
  swap(_impl_.chiled_id_, other->_impl_.chiled_id_);
}

::google::protobuf::Metadata item::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MenuTree::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MenuTree>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MenuTree, _impl_._has_bits_);
};

MenuTree::MenuTree(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MenuTree_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MenuTree)
}
PROTOBUF_NDEBUG_INLINE MenuTree::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::MenuTree& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        items_{visibility, arena, from.items_},
        language_(arena, from.language_) {}

MenuTree::MenuTree(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MenuTree& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MenuTree_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MenuTree* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, parent_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, parent_id_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, parent_id_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:MenuTree)
}
PROTOBUF_NDEBUG_INLINE MenuTree::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        items_{visibility, arena},
        language_(arena) {}

inline void MenuTree::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, parent_id_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, parent_id_) +
               sizeof(Impl_::status_));
}
MenuTree::~MenuTree() {
  // @@protoc_insertion_point(destructor:MenuTree)
  SharedDtor(*this);
}
inline void MenuTree::SharedDtor(MessageLite& self) {
  MenuTree& this_ = static_cast<MenuTree&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.language_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MenuTree::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MenuTree(arena);
}
constexpr auto MenuTree::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MenuTree, _impl_.items_) +
          decltype(MenuTree::_impl_.items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(MenuTree), alignof(MenuTree), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MenuTree::PlacementNew_,
                                 sizeof(MenuTree),
                                 alignof(MenuTree));
  }
}
constexpr auto MenuTree::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MenuTree_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MenuTree::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MenuTree>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MenuTree::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MenuTree>(), &MenuTree::ByteSizeLong,
              &MenuTree::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MenuTree, _impl_._cached_size_),
          false,
      },
      &MenuTree::kDescriptorMethods,
      &descriptor_table_menu_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MenuTree_class_data_ =
        MenuTree::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MenuTree::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MenuTree_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MenuTree_class_data_.tc_table);
  return MenuTree_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 25, 2>
MenuTree::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MenuTree, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MenuTree_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MenuTree>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .item items = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MenuTree, _impl_.items_)}},
    // string language = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MenuTree, _impl_.language_)}},
    // int32 parent_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MenuTree, _impl_.parent_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(MenuTree, _impl_.parent_id_)}},
    // bool status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MenuTree, _impl_.status_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(MenuTree, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string language = 1;
    {PROTOBUF_FIELD_OFFSET(MenuTree, _impl_.language_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 parent_id = 2;
    {PROTOBUF_FIELD_OFFSET(MenuTree, _impl_.parent_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool status = 3;
    {PROTOBUF_FIELD_OFFSET(MenuTree, _impl_.status_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .item items = 4;
    {PROTOBUF_FIELD_OFFSET(MenuTree, _impl_.items_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::item>()},
  }},
  {{
    "\10\10\0\0\0\0\0\0"
    "MenuTree"
    "language"
  }},
};
PROTOBUF_NOINLINE void MenuTree::Clear() {
// @@protoc_insertion_point(message_clear_start:MenuTree)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.language_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.parent_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.status_) -
        reinterpret_cast<char*>(&_impl_.parent_id_)) + sizeof(_impl_.status_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MenuTree::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MenuTree& this_ = static_cast<const MenuTree&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MenuTree::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MenuTree& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:MenuTree)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string language = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_language().empty()) {
      const ::std::string& _s = this_._internal_language();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MenuTree.language");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 parent_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_parent_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_parent_id(), target);
    }
  }

  // bool status = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_status(), target);
    }
  }

  // repeated .item items = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_items_size());
       i < n; i++) {
    const auto& repfield = this_._internal_items().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MenuTree)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MenuTree::ByteSizeLong(const MessageLite& base) {
  const MenuTree& this_ = static_cast<const MenuTree&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MenuTree::ByteSizeLong() const {
  const MenuTree& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:MenuTree)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .item items = 4;
    {
      total_size += 1UL * this_._internal_items_size();
      for (const auto& msg : this_._internal_items()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string language = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_language().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_language());
      }
    }
    // int32 parent_id = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_parent_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_parent_id());
      }
    }
    // bool status = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MenuTree::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MenuTree*>(&to_msg);
  auto& from = static_cast<const MenuTree&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:MenuTree)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_language().empty()) {
        _this->_internal_set_language(from._internal_language());
      } else {
        if (_this->_impl_.language_.IsDefault()) {
          _this->_internal_set_language("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_parent_id() != 0) {
        _this->_impl_.parent_id_ = from._impl_.parent_id_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MenuTree::CopyFrom(const MenuTree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MenuTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MenuTree::InternalSwap(MenuTree* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.language_, &other->_impl_.language_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MenuTree, _impl_.status_)
      + sizeof(MenuTree::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(MenuTree, _impl_.parent_id_)>(
          reinterpret_cast<char*>(&_impl_.parent_id_),
          reinterpret_cast<char*>(&other->_impl_.parent_id_));
}

::google::protobuf::Metadata MenuTree::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_menu_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
